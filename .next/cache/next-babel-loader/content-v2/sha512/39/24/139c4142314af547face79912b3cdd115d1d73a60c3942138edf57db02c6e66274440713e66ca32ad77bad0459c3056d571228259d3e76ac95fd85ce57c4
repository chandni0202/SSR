{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/tusha/Desktop/Frontend Projects/SSRVSCSR/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/tusha/Desktop/Frontend Projects/SSRVSCSR/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\tusha\\\\Desktop\\\\Frontend Projects\\\\SSRVSCSR\\\\pages\\\\robots.js\",\n    _this = this;\n\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nvar Robots = function Robots(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Robots\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.robots.map(function (robot) {\n        /*#__PURE__*/\n        _jsxDEV(\"li\", {\n          children: robot.name\n        }, robot.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = Robots;\nRobots.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch(\"https://jsonplaceholder.typicode.com/users\");\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            robots: data\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Robots;\n\nvar _c;\n\n$RefreshReg$(_c, \"Robots\");","map":{"version":3,"sources":["C:/Users/tusha/Desktop/Frontend Projects/SSRVSCSR/pages/robots.js"],"names":["Link","fetch","Robots","props","robots","map","robot","name","id","getInitialProps","res","json","data"],"mappings":";;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AACtB,sBACI;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,eAEA,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,aAFA,eAKA;AAAA,gBACKA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiB,UAAAC,KAAK,EAAG;AAEtB;AAAA;AAAA,oBACKA,KAAK,CAACC;AADX,WAASD,KAAK,CAACE,EAAf;AAAA;AAAA;AAAA;AAAA;AAGH,OALA;AADL;AAAA;AAAA;AAAA;AAAA,aALA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAgBH,CAjBD;;KAAMN,M;AAmBNA,MAAM,CAACO,eAAP,yEAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACHR,KAAK,CAAC,4CAAD,CADF;;AAAA;AACfS,UAAAA,GADe;AAAA;AAAA,iBAGFA,GAAG,CAACC,IAAJ,EAHE;;AAAA;AAGfC,UAAAA,IAHe;AAAA,2CAKd;AACHR,YAAAA,MAAM,EAAGQ;AADN,WALc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;AASA,eAAeV,MAAf","sourcesContent":["import Link from 'next/link';\r\n\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nconst Robots = (props) => {\r\n    return(\r\n        <div>\r\n        <div>Robots</div>\r\n        <Link href='/'>\r\n\r\n        </Link>\r\n        <div>\r\n            {props.robots.map(robot =>{\r\n\r\n                <li key={robot.id}>\r\n                    {robot.name}\r\n                </li>\r\n            })}\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nRobots.getInitialProps = async function (){\r\n    const res = await fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n\r\n    const data = await res.json();\r\n\r\n    return {\r\n        robots : data\r\n    }\r\n}\r\nexport default Robots;"]},"metadata":{},"sourceType":"module"}